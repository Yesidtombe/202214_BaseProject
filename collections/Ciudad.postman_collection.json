{
	"info": {
		"_postman_id": "138a835f-cf5c-4588-a8c5-db2c7caf803e",
		"name": "Ciudad",
		"description": "Pruebas para la entidad Ciudad",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19677878"
	},
	"item": [
		{
			"name": "Crear una ciudad valida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"ciudad_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"nombre\": \"Buenos aires\",\r\n   \"pais\": \"Argentina\",\r\n   \"habitantes\": 123456\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/cities",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities"
					]
				},
				"description": "Request para crear una nueva ciudad con la información dada."
			},
			"response": [
				{
					"name": "Crear una ciudad valida",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"Buenos aires\",\r\n   \"pais\": \"Argentina\",\r\n   \"habitantes\": 123456\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cities",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cities"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"784da702-8e45-4d1a-bb2f-695b4ba11094\",\r\n    \"nombre\": \"Buenos aires\",\r\n    \"pais\": \"Argentina\",\r\n    \"habitantes\": 123456\r\n}"
				}
			]
		},
		{
			"name": "Crear una ciudad invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El pais al que pertenece la ciudad no está permitido\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"nombre\": \"Popayán\",\r\n   \"pais\": \"Colombia\",\r\n   \"habitantes\": 123456\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/cities",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities"
					]
				},
				"description": "Request que intenta crear una nueva ciudad inavlida con la información dada."
			},
			"response": [
				{
					"name": "Crear una ciudad invalida",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"Popayán\",\r\n   \"pais\": \"Colombia\",\r\n   \"habitantes\": 123456\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cities",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cities"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 412,\r\n    \"message\": \"El pais al que pertenece la ciudad no está permitido\"\r\n}"
				}
			]
		},
		{
			"name": "Obtener todas las ciudades",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of ciudades > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities"
					]
				},
				"description": "Request para obtner todas las ciudades de la base de datos."
			},
			"response": [
				{
					"name": "Obtener todas las ciudades",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cities",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cities"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\r\n    {\r\n        \"id\": \"39fc3d2f-9bad-414b-99e8-dc3133e91a9a\",\r\n        \"nombre\": \"Buenos aires\",\r\n        \"pais\": \"Argentina\",\r\n        \"habitantes\": 123456,\r\n        \"supermercados\": []\r\n    }\r\n]"
				}
			]
		},
		{
			"name": "Obtener una ciudad por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}"
					]
				},
				"description": "Request para obtener una ciudad con un id dado."
			},
			"response": [
				{
					"name": "Obtener una ciudad por ID",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cities/{{ciudad_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cities",
								"{{ciudad_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"cef07c22-9b23-4b3b-9040-fc509fa3d6d6\",\r\n    \"nombre\": \"Buenos aires\",\r\n    \"pais\": \"Argentina\",\r\n    \"habitantes\": 123456,\r\n    \"supermercados\": []\r\n}"
				}
			]
		},
		{
			"name": "Obtener una ciudad por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el id dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "StartFragment\n\nRequest para obtener una nueva ciudad con un ID dado inválido."
			},
			"response": [
				{
					"name": "Obtener una ciudad por un ID que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cities/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cities",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La ciudad con el id dado no fue encontrada\"\r\n}"
				}
			]
		},
		{
			"name": "Actualizar una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"nombre\": \"Asunción\",\r\n   \"pais\": \"Paraguay\",\r\n   \"habitantes\": 3332211\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}"
					]
				},
				"description": "Request para actualizar una ciudad con una información nueva dada."
			},
			"response": [
				{
					"name": "Actualizar una ciudad",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"Asunción\",\r\n   \"pais\": \"Paraguay\",\r\n   \"habitantes\": 3332211\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cities/{{ciudad_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cities",
								"{{ciudad_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"cef07c22-9b23-4b3b-9040-fc509fa3d6d6\",\r\n    \"nombre\": \"Asunción\",\r\n    \"pais\": \"Paraguay\",\r\n    \"habitantes\": 3332211\r\n}"
				}
			]
		},
		{
			"name": "Actualizar una ciudad con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el id dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Asunción\",\r\n    \"pais\": \"Paraguay\",\r\n    \"habitantes\": 3332211\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/cities/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Request que intenta actualizar una ciudad con un ID que no existe."
			},
			"response": [
				{
					"name": "Actualizar una ciudad con un ID que no existe",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Asunción\",\r\n    \"pais\": \"Paraguay\",\r\n    \"habitantes\": 3332211\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cities/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cities",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La ciudad con el id dado no fue encontrada\"\r\n}"
				}
			]
		},
		{
			"name": "Eliminar una ciudad por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities/{{ciudad_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}"
					]
				},
				"description": "Request para eliminar una ciudad con un ID dado"
			},
			"response": [
				{
					"name": "Eliminar una ciudad por su ID",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cities/{{ciudad_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cities",
								"{{ciudad_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Eliminar una ciudad con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"La ciudad con el id dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/cities/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"cities",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Request para eliminar una ciudad con ID dado que no existe en base de datos."
			},
			"response": [
				{
					"name": "Eliminar una ciudad con un ID que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cities/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cities",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La ciudad con el id dado no fue encontrada\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}